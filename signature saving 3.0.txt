import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:syncfusion_flutter_signaturepad/signaturepad.dart';
import 'dart:ui' as ui;
import 'dart:io' show Directory, File, Platform;
import 'dart:io';
import 'dart:typed_data';
import 'package:path_provider/path_provider.dart';
import 'package:open_file/open_file.dart';
import 'package:universal_html/html.dart' show AnchorElement;
import 'package:flutter/foundation.dart' show kIsWeb;
import 'dart:convert';
import 'package:permission_handler/permission_handler.dart';
import 'package:image_gallery_saver/image_gallery_saver.dart';
import 'package:image_picker/image_picker.dart';
import 'dart:math';

void main() {
  runApp(const MyApp());
}
int n = 1;
class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(

        colorScheme: ColorScheme.fromSeed(seedColor: Colors.black87),
        useMaterial3: true,
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();

}

Future<void> saveImageToDevice(Uint8List imageBytes) async {
  // Get the external storage directory
  Directory? directory;
  if (Platform.isAndroid) {
    directory = await getExternalStorageDirectory();
  } else {
    // For iOS or other platforms, you may need to handle this differently
    // depending on your use case.
    // For iOS, you can use getApplicationDocumentsDirectory() or
    // getTemporaryDirectory() depending on your needs.
    return;
  }

  if (directory == null) {
    print('Failed to access external storage directory.');
    return;
  }

  final random = Random();
  final int randomSuffix = random.nextInt(10000);

  final file = File('${directory.path}/Signature_$randomSuffix.png');

  try {
    await file.writeAsBytes(imageBytes);

    // Save the image to the gallery
    final result = await ImageGallerySaver.saveFile(file.path);

    if (result != null && result['isSuccess']) {
      print('Image saved to gallery.');
    } else {
      print('Failed to save image to gallery.');
    }

    print(randomSuffix);
  } catch (e) {
    print('Error: $e');
  }
}


class _MyHomePageState extends State<MyHomePage> {
  final GlobalKey<SfSignaturePadState> _signaturePadStatekey = GlobalKey<SfSignaturePadState>();

  void showSnackBar(String message) {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text(message),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Scaffold(
        body: Center(
          child: Container(
            child: Column(
              children: [
                Padding(
                    padding: EdgeInsets.all(10),
                    child: Container(
                        child: SfSignaturePad(
                            key: _signaturePadStatekey,
                            backgroundColor: Colors.white,
                            strokeColor: Colors.black,
                            minimumStrokeWidth: 1.0,
                            maximumStrokeWidth: 4.0),
                        decoration:
                        BoxDecoration(border: Border.all(color: Colors.grey)))),
                SizedBox(height: 10),
                ElevatedButton(
                  onPressed: () async {
                    _signaturePadStatekey.currentState!.clear();
                  },
                  child: Text('Clear'),
                ),
                ElevatedButton(
                  onPressed: () async {
                    ui.Image image = await _signaturePadStatekey.currentState!.toImage(
                      pixelRatio: 2.0,
                    );

                    final byteData = await image.toByteData(format: ui.ImageByteFormat.png);
                    final Uint8List imageBytes = byteData!.buffer.asUint8List(
                      byteData.offsetInBytes,
                      byteData.lengthInBytes,
                    );

                    // Show a Snackbar message here
                    showSnackBar('Image Saved');

                    await saveImageToDevice(imageBytes);
                  },
                  child: Text('Save As Image'),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

}





/*
dependencies:
  flutter:
    sdk: flutter
  syncfusion_flutter_signaturepad: ^19.1.66-beta
  path_provider: ^2.0.2
  open_file: ^3.2.2
  universal_html: ^2.0.8
  permission_handler: ^10.4.3
  image_gallery_saver: ^2.0.3
  image_picker: ^0.8.0

  cupertino_icons: ^1.0.2

*/

